# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2018-07-19 16:33
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import otree.db.models
import otree_save_the_change.mixins
import radiogrid.radiogrid.db


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('otree', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_subsession', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('rows', otree.db.models.StringField(max_length=10000, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='italiantutorial_group', to='otree.Session')),
            ],
            options={
                'db_table': 'italiantutorial_group',
            },
            bases=(otree_save_the_change.mixins.SaveTheChange, models.Model),
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_group', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_payoff', otree.db.models.CurrencyField(default=0, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_gbat_arrived', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('_gbat_grouped', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('treatment', otree.db.models.StringField(max_length=10000, null=True)),
                ('timeline', otree.db.models.StringField(max_length=10000, null=True)),
                ('auctionenddate', otree.db.models.FloatField(null=True)),
                ('wage_offer', otree.db.models.PositiveIntegerField(null=True)),
                ('last_correct_answer', otree.db.models.IntegerField(null=True)),
                ('tasks_correct', otree.db.models.IntegerField(default=0, null=True)),
                ('tasks_attempted', otree.db.models.IntegerField(default=0, null=True)),
                ('ROWS', otree.db.models.StringField(default=((1, 'Se un lavoratore è disoccupato in un dato round, non guadagnerà niente.'), (2, 'Se un datore di lavoro non è riuscito ad assumere un lavoratore in un dato round, il datore non guadagnerà niente.'), (3, "Accettando un'offerta, il lavoratore si impegna a lavorare per quel datore di lavoro per quel round."), (4, 'Un datore di lavoro che ha assunto qualcuno ottiene 40 punti.'), (5, 'In generale, il salario viene dedotto dal guadagno del datore di lavoro e dato al lavoratore.'), (6, 'Il numero di compiti che il lavoratore può svolgere è illimitato.'), (7, 'I lavoratori ottengono un salario più alto se portano a termine un maggior numero di compiti.'), (8, 'Oltre al lavoratore, solo il datore di lavoro viene a conoscenza del numero di compiti che il lavoratore ha tentato e completato correttamente.'), (9, 'Verrai ricompensato per tutti e 8 i round.'), (10, 'Ci sono sempre dei lavoratori disoccupati.'), (11, 'Il guadagno di un datore di lavoro in un dato round può essere negativo.'), (12, 'La tassa sul reddito del lavoratore è sempre di 20 punti.')), max_length=10000, null=True)),
                ('trueorfalse', radiogrid.radiogrid.db.RadioGridField(require_all_fields=True, rows=((1, 'Se un lavoratore è disoccupato in un dato round, non guadagnerà niente.'), (2, 'Se un datore di lavoro non è riuscito ad assumere un lavoratore in un dato round, il datore non guadagnerà niente.'), (3, "Accettando un'offerta, il lavoratore si impegna a lavorare per quel datore di lavoro per quel round."), (4, 'Un datore di lavoro che ha assunto qualcuno ottiene 40 punti.'), (5, 'In generale, il salario viene dedotto dal guadagno del datore di lavoro e dato al lavoratore.'), (6, 'Il numero di compiti che il lavoratore può svolgere è illimitato.'), (7, 'I lavoratori ottengono un salario più alto se portano a termine un maggior numero di compiti.'), (8, 'Oltre al lavoratore, solo il datore di lavoro viene a conoscenza del numero di compiti che il lavoratore ha tentato e completato correttamente.'), (9, 'Verrai ricompensato per tutti e 8 i round.'), (10, 'Ci sono sempre dei lavoratori disoccupati.'), (11, 'Il guadagno di un datore di lavoro in un dato round può essere negativo.'), (12, 'La tassa sul reddito del lavoratore è sempre di 20 punti.')), values=((1, 'Vero'), (2, 'Falso')), verbose_name='Vero o falso?')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='italiantutorial.Group')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='italiantutorial_player', to='otree.Participant')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='italiantutorial_player', to='otree.Session')),
            ],
            options={
                'db_table': 'italiantutorial_player',
            },
            bases=(otree_save_the_change.mixins.SaveTheChange, models.Model),
        ),
        migrations.CreateModel(
            name='Subsession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='italiantutorial_subsession', to='otree.Session')),
            ],
            options={
                'db_table': 'italiantutorial_subsession',
            },
            bases=(otree_save_the_change.mixins.SaveTheChange, models.Model),
        ),
        migrations.AddField(
            model_name='player',
            name='subsession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='italiantutorial.Subsession'),
        ),
        migrations.AddField(
            model_name='group',
            name='subsession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='italiantutorial.Subsession'),
        ),
    ]
